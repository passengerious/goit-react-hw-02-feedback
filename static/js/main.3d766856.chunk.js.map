{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Statistics","good","neutral","bad","total","percentageOfGood","list","item","Notification","infoMessage","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","sendFeedback","setState","prevState","this","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,oKCgB1CC,MAdf,YAAwC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvB,OACA,sBAAKC,UAAWC,IAAEC,QAAlB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,M,gBCcQI,MAlBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SAELR,UAAWC,IAAEQ,OACbC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAJIA,O,gBCgBII,MApBf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBAC7C,OACI,qBAAIhB,UAAWC,IAAEgB,KAAjB,UACI,qBAAIjB,UAAWC,IAAEiB,KAAjB,mBAA8BN,KAC9B,qBAAIZ,UAAWC,IAAEiB,KAAjB,sBAAiCL,KACjC,qBAAIb,UAAWC,IAAEiB,KAAjB,kBAA6BJ,KAC7B,qBAAId,UAAWC,IAAEiB,KAAjB,oBAA+BH,KAC/B,qBAAIf,UAAWC,IAAEiB,KAAjB,gCAA2CF,EAA3C,WCEGG,MAVf,YAAyC,IAAhBC,EAAe,EAAfA,YACrB,OACA,4BAAIA,KC4DOC,E,4MAxDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAGpC,OAJyB,EACjBV,KADiB,EACXC,QADW,EACFC,K,EAMzBU,gCAAkC,WAChC,IAAMT,EAAQ,EAAKQ,qBACXX,EAAS,EAAKU,MAAdV,KAGR,OADyBG,EAAQU,KAAKC,MAAOd,EAAOG,EAAS,KAAO,G,EAItEY,aAAe,SAAApB,GACb,EAAKqB,UAAS,SAAAC,GAAS,sBAAQtB,EAASsB,EAAUtB,GAAU,O,uDAGpD,IAAD,EACwBuB,KAAKR,MAA5BV,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QACbE,EAAQe,KAAKP,qBACbP,EAAmBc,KAAKN,kCAE9B,OACE,qCACE,cAAC,EAAD,CAAS1B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS2B,OAAOC,KAAKF,KAAKR,OAC1BjB,gBAAiByB,KAAKH,iBAI1B,eAAC,EAAD,CAAS7B,MAAM,aAAf,UACGiB,EAAQ,GACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,IAGX,IAAVD,GAAe,cAAC,EAAD,CAAcK,YAAY,2C,GAlDlCa,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAvC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.3d766856.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1mGyG\",\"item\":\"Statistics_item__1iw5-\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section ({ title, children }) {\r\n    return (\r\n    <div className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n  \r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      key={option}\r\n      className={s.button}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, percentageOfGood }) {\r\n    return  (\r\n        <ul className={s.list}>\r\n            <li className={s.item}>Good: {good}</li>\r\n            <li className={s.item}>Neutral: {neutral}</li>\r\n            <li className={s.item}>Bad: {bad}</li>\r\n            <li className={s.item}>Total: {total}</li>\r\n            <li className={s.item}>Positive Feedback: {percentageOfGood}%</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n  \r\nexport default Statistics;\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification ({ infoMessage }) {\r\n    return(\r\n    <p>{infoMessage}</p>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    infoMessage: PropTypes.string.isRequired,\r\n};\r\n  \r\nexport default Notification;","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    const percentageOfGood = total ? Math.round((good / total) * 100) : 0;\n    return percentageOfGood;\n  };\n\n  sendFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedback();\n    const percentageOfGood = this.countPositiveFeedbackPercentage();\n    \n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.sendFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percentageOfGood={percentageOfGood}\n            />\n          )}\n          {total === 0 && <Notification infoMessage=\"There is no one feedback yet\" />}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2h93t\",\"title\":\"Section_title__usjhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__hFpiu\"};"],"sourceRoot":""}